services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: wallet-postgres
    environment:
      POSTGRES_DB: wallet_db
      POSTGRES_USER: wallet_user
      POSTGRES_PASSWORD: wallet_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wallet_user -d wallet_db && psql -U wallet_user -d wallet_db -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - wallet-network

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: wallet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - wallet-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Prometheus para observabilidade
  prometheus:
    image: prom/prometheus:latest
    container_name: wallet-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - wallet-network

  # Grafana para visualização
  grafana:
    image: grafana/grafana:latest
    container_name: wallet-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - wallet-network
    depends_on:
      prometheus:
        condition: service_healthy

  # Serviço principal da carteira
  wallet-service:
    build: .
    container_name: wallet-service
    ports:
      - "8080:8080"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_PORT: 5432
      SPRING_DATASOURCE_DB: wallet_db
      SPRING_DATASOURCE_USERNAME: wallet_user
      SPRING_DATASOURCE_PASSWORD: wallet_password
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT Configuration
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRATION: 86400000
      JWT_REFRESH_EXPIRATION: 604800000
      JWT_ISSUER: wallet-service
      JWT_AUDIENCE: wallet-api
      
      # Server Configuration
      SERVER_PORT: 8080
      
      # Logging Configuration
      LOGGING_LEVEL_COM_WALLET: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: INFO
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: INFO
      LOGGING_LEVEL_ORG_HIBERNATE_SQL: WARN
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_REDIS: INFO
      LOGGING_LEVEL_IO_LETTUCE: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    networks:
      - wallet-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  wallet-network:
    driver: bridge 