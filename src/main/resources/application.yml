spring:
  application:
    name: wallet-service
  datasource:
    url: jdbc:postgresql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:5432}/${SPRING_DATASOURCE_DB:wallet_db}
    username: ${SPRING_DATASOURCE_USERNAME:wallet_user}
    password: ${SPRING_DATASOURCE_PASSWORD:wallet_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED:true}
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    url: ${SPRING_FLYWAY_URL:jdbc:postgresql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:5432}/${SPRING_DATASOURCE_DB:wallet_db}}
    user: ${SPRING_FLYWAY_USER:${SPRING_DATASOURCE_USERNAME:wallet_user}}
    password: ${SPRING_FLYWAY_PASSWORD:${SPRING_DATASOURCE_PASSWORD:wallet_password}}
  cache:
    type: redis
    redis:
      time-to-live: 1800000
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      repositories:
        enabled: false

management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,prometheus,metrics}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
      show-components: always
  health:
    redis:
      enabled: true
      timeout: 2000ms
    defaults:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKeyForDevelopmentOnlyChangeInProduction}
  expiration: ${JWT_EXPIRATION:86400000} # 24 horas
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 dias
  issuer: ${JWT_ISSUER:wallet-service}
  audience: ${JWT_AUDIENCE:wallet-api}

logging:
  level:
    com.wallet: ${LOGGING_LEVEL_COM_WALLET:INFO}
    org.springframework.web: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
    org.springframework.security: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY:INFO}
    org.hibernate.SQL: ${LOGGING_LEVEL_ORG_HIBERNATE_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOGGING_LEVEL_ORG_HIBERNATE_TYPE:TRACE}
    org.springframework.data.redis: ${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_DATA_REDIS:INFO}
    io.lettuce.core: ${LOGGING_LEVEL_IO_LETTUCE:INFO}
  pattern:
    console: "${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n}"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/wallet-service.log

resilience4j:
  circuitbreaker:
    instances:
      wallet-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60s
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
      database:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 30s
        sliding-window-size: 5
        minimum-number-of-calls: 3
  retry:
    instances:
      wallet-service:
        max-attempts: 3
        wait-duration: 100ms
        retry-exceptions:
          - java.lang.Exception
      database:
        max-attempts: 3
        wait-duration: 200ms
        retry-exceptions:
          - org.springframework.dao.DataAccessException

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always 