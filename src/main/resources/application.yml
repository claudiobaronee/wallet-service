spring:
  application:
    name: wallet-service
  profiles:
    active: docker
  datasource:
    url: jdbc:postgresql://${SPRING_DATASOURCE_HOST:localhost}:${SPRING_DATASOURCE_PORT:5432}/${SPRING_DATASOURCE_DB:wallet_db}
    username: ${SPRING_DATASOURCE_USERNAME:wallet_user}
    password: ${SPRING_DATASOURCE_PASSWORD:wallet_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
  cache:
    type: redis
    redis:
      time-to-live: 1800000
  data:
    redis:
      repositories:
        enabled: false


management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    redis:
      enabled: true
      timeout: 2000ms
    defaults:
      enabled: true

  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    docExpansion: none
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

logging:
  level:
    com.wallet: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.data.redis: DEBUG
    io.lettuce.core: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/wallet-service.log

jwt:
  secret: ${JWT_SECRET:your-secret-key-here-change-in-production}
  expiration: ${JWT_EXPIRATION:86400000}
  issuer: ${JWT_ISSUER:wallet-service}
  audience: ${JWT_AUDIENCE:wallet-api}

rate-limit:
  ip-requests-per-minute: 1000
  user-requests-per-minute: 10000
  ip-requests-per-hour: 50000
  user-requests-per-hour: 100000
  ip-requests-per-day: 500000
  user-requests-per-day: 1000000
  block-duration-seconds: 60

resilience4j:
  circuitbreaker:
    instances:
      wallet-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60s
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
      database:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 30s
        sliding-window-size: 5
        minimum-number-of-calls: 3
  retry:
    instances:
      wallet-service:
        max-attempts: 3
        wait-duration: 100ms
        retry-exceptions:
          - java.lang.Exception
      database:
        max-attempts: 3
        wait-duration: 200ms
        retry-exceptions:
          - org.springframework.dao.DataAccessException

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always 